# Workflow based on https://github.com/actions/starter-workflows/blob/main/ci/python-package.yml

name: Unit tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 9 * * 1,3,5"
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.python-version }}; rpy2 ${{ matrix.config.rpy2 }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: 'ubuntu-latest', python-version: '3.6', rpy2: 'true'}
          - {os: 'ubuntu-latest', python-version: '3.7', rpy2: 'true'}
          - {os: 'ubuntu-latest', python-version: '3.8', rpy2: 'true'}
          - {os: 'ubuntu-latest', python-version: '3.8', rpy2: 'false'}
          - {os: 'windows-latest', python-version: '3.8', rpy2: 'true'}
          - {os: 'macOS-latest', python-version: '3.8', rpy2: 'true'}
          - {os: 'ubuntu-latest', python-version: '3.9', rpy2: 'true'}
          - {os: 'ubuntu-latest', python-version: '3.10', rpy2: 'true'}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - name: Set up Python ${{ matrix.config.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python-version }}
    - name: Install vineknockoffs and dependencies
      run: |
        pip install --editable .
        pip install pytest
    - name: Install rpy2
      if: matrix.config.rpy2 == 'true'
      run: |
        pip install rpy2
    - name: Set up R (with r2u)
      if: matrix.config.rpy2 == 'true'
      run: |
        curl -OLs https://raw.githubusercontent.com/eddelbuettel/r2u/master/inst/scripts/add_cranapt_focal.sh
        chmod 0755 add_cranapt_focal.sh
        ./add_cranapt_focal.sh
    - name: Intall R packages
      if: matrix.config.rpy2 == 'true'
      run: |
        install.packages(c('glmnet', 'kde1d', 'TSP', 'VineCopula'))
      shell: Rscript {0}
    - name: Test with pytest
      if: |
        matrix.config.os != 'ubuntu-latest' ||
        matrix.config.python-version != '3.8'
      run: |
        pytest
    - name: Test with pytest and coverage
      if: |
        matrix.config.os == 'ubuntu-latest' &&
        matrix.config.python-version == '3.8'
      run: |
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      if: |
        matrix.config.os == 'ubuntu-latest' &&
        matrix.config.python-version == '3.8'
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
        flags: unittests
